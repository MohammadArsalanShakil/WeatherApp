@page "/fetchdata"
@using WeatherApp.Data
@inject WeatherForecastService ForecastService

<PageTitle>Current Weather</PageTitle>

<h1>Current Weather</h1>

<p>This component demonstrates fetching weather information from OpenWeatherAPI.</p>

<input placeholder="Enter City Name" @bind="cityName" />
<button @onclick="SearchCity">Search</button>

<br />
<br />

@if (weatherData == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<style>
		table {
			border: 1px solid #b3adad;
			border-collapse: collapse;
			padding: 5px;
		}

			table th {
				border: 1px solid #b3adad;
				padding: 5px;
				background: #f0f0f0;
				color: #313030;
			}

			table td {
				border: 1px solid #b3adad;
				text-align: center;
				padding: 5px;
				background: #ffffff;
				color: #313030;
			}
	</style>
	<table>
		<thead>
			<tr>
				<th>City</th>
				<th>Icon</th>
				<th>Temperature</th>
				<th>Description</th>
				<th>Humidity</th>
				<th>Wind Speed</th>
			</tr>
		</thead>
		<tbody>
			@if (weatherData.name != null && weatherData!=new WeatherAPI())
			{
				<tr>
					<td>@weatherData.name</td>
					<td>
						<div class="">
							<img src="https://openweathermap.org/img/wn/@weatherData.weather[0].icon@@4x.png" alt="" height='50' width='50'>
						</div>
					</td>
					<td>@weatherData.main.temp Celsius</td>
					<td>@weatherData.weather[0].main</td>
					<td>@weatherData.main.humidity %</td>
					<td>@weatherData.wind.speed meter/sec</td>
				</tr>
			}
			else
			{
				<tr>
					<td>Sorry City Not Found</td>
					<td>&nbsp;</td>
					<td>&nbsp;</td>
					<td>&nbsp;</td>
					<td>&nbsp;</td>
				</tr>
			}
		</tbody>
	</table>
	<br />

    @* <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecast)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table> *@
}

@code {
	private string? cityName;
	private WeatherAPI? weatherData = null;

	private async void SearchCity()
	{
		if (!string.IsNullOrWhiteSpace(cityName))
		{
			try
			{
				weatherData = await ForecastService.GetForecastAsync(cityName);
				if (!string.IsNullOrWhiteSpace(cityName) && !int.TryParse(cityName, out _))
				{
					weatherData.main.temp = Math.Round(weatherData.main.temp - 273.15, 2);
					cityName = string.Empty;
					var d=weatherData.weather[0].icon;
					StateHasChanged();
				}
				else
				{
					weatherData = new WeatherAPI();
				}
			}
			catch (Exception ex)
			{

			}
		}
		else
		{
			//TODO: Error Handling
		}
	}
}
